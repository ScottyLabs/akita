app:
  auth:
    allowed-origins: ${ALLOWED_ORIGINS}

spring:
  application:
    name: akita
  security:
    oauth2:
      client:
        provider:
          courses:
            issuer-uri: ${COURSES_ISSUER_URI}
          o-quest:
            issuer-uri: ${OQUEST_ISSUER_URI}
          maps:
            issuer-uri: ${MAPS_ISSUER_URI}
        registration:
          courses:
            provider: courses
            client-id: ${OAUTH_COURSES_ID}
            client-secret: ${OAUTH_COURSES_SECRET}
            scope: openid,profile,email,offline_access
            client-name: courses
          o-quest:
            provider: o-quest
            client-id: ${OAUTH_OQUEST_ID}
            client-secret: ${OAUTH_OQUEST_SECRET}
            scope: openid,profile,email,offline_access
            client-name: o-quest
          maps:
            provider: maps
            client-id: ${OAUTH_MAPS_ID}
            client-secret: ${OAUTH_MAPS_SECRET}
            scope: openid,profile,email,offline_access
            client-name: maps
  cloud:
    gateway:
      routes:
        - id: courses
          uri: ${COURSES_PRIVATE_URL}
          predicates:
            - Host=${COURSES_PUBLIC_HOST}
          filters:
            - SaveSession
            - TokenRelay=courses
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - id: o-quest
          uri: ${OQUEST_PRIVATE_URL}
          predicates:
            - Host=${OQUEST_PUBLIC_HOST}
          filters:
            - SaveSession
            - TokenRelay=o-quest
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - id: maps
          uri: ${MAPS_PRIVATE_URL}
          predicates:
            - Host=${MAPS_PUBLIC_HOST}
          filters:
            - SaveSession
            - TokenRelay=maps
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

  data:
    redis:
      url: ${REDIS_URL}
